spring:
#  h2:
#    console:
#      enabled: true
#      path: /h2
  redis:
    host: localhost
    port: 6379
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://project-sayo.coj0dd97rl4j.ap-northeast-2.rds.amazonaws.com:13306/test?allowPublicKeyRetrieval=true&useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC # 포트넘버, 스키마이름
    username: ${MYSQL_NAME} #root # 환경변수로 넣었습니다.
    password: ${MYSQL_SECRET}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${G_CLIENT_ID}
            clientSecret: ${G_CLIENT_SECRET}
            scope:
              - email
              - profile
          naver:
            clientId: ${N_CLIENT_ID}
            clientSecret: ${N_CLIENT_SECRET}
            clientAuthenticationMethod: post
            authorizationGrantType: authorization_code
            redirectUri: http://localhost:8080/login/oauth2/code/naver
            scope:
              - nickname
              - email
              - profile_image
            clientName: Naver
          kakao:
            clientId: ${K_CLIENT_ID}
            clientSecret: ${K_CLIENT_SECRET}
            clientAuthenticationMethod: post
            authorizationGrantType: authorization_code
            redirectUri: http://localhost:8080/login/oauth2/code/kakao
            scope:
              - profile_nickname
              - profile_image
              - account_email
            clientName: Kakao
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize
            token_uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user_name_attribute: response

jwt:
  key: ${JWT_SECRET_KEY}       # 민감한 정보는 시스템 환경 변수에서 로드한다.
  access-token-expiration-minutes: 420
  refresh-token-expiration-minutes: 420
aes:
  secret-key: 970d8c1e726c39839da31a52a4968cf6 #dusqhdtkacjsdhqoraksqkewk3500
mail:
  smtp:
    host: smtp.gmail.com
    port: 587
    username: sayoproject2023@gmail.com
    password: msxbvigqkpyphigg
    auth: true
    starttls:
      enable: true
  subject:
    user:
      registration: 공동구매플랫폼 SAYO서비스에 성공적으로 가입하셨습니다.
  template:
    name:
      user:
        join: email-registration-user
  address:
    admin: admin@gmail.com, test@gmail.com


#cloud:
#  aws:
#    credentials:
#      access-key: ${S3_ACCESS_KEY}
#      secret-key: ${S3_SECRET_KEY}
#    s3: #버킷이름
#      bucket: ${S3_BUCKET}
#    region: #S3 지역
#      static: ${S3_REGION}
#    stack:
#      auto: false

#logging:
#  level:
#    org.hibernate.SQL: debug
#    org.hibernate.type: trace
